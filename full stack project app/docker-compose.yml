#Creating a Docker Compose file for a database is a convenient way
#to define and run your database container along with any necessary
#configurations. Below is a basic example of a Docker Compose file
#(docker-compose.yml) for setting up a PostgreSQL database:

version: "3"

services:
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: invoice_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
######################################
# In this Docker Compose file:
# - We define a service called db using the postgres image from the Docker Hub.
# - We expose the PostgreSQL default port (5432) and map it to the host machine's port 5432.
# - We set environment variables for the PostgreSQL database, username, and password.
# - We define a volume to persist the database data on the host machine.

######################################
# To use this Docker Compose file:
# - Open a terminal or command prompt.

# - Navigate to the directory containing the docker-compose.yml file.

# - Run the following command: docker-compose up -d

# This command will pull the PostgreSQL image from Docker Hub (if not already available),
#create a container based on the specifications in the Docker Compose
#file, and start the container in detached mode (-d flag).

# Your PostgreSQL database should now be up and running, and you can connect to it using
#your preferred PostgreSQL client using the specified credentials.
